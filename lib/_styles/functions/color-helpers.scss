@function opaque($background, $foreground) {
  @return mix(rgba($foreground, 1), $background, opacity($foreground) * 100);
}

@function luminance($color) {
  $rgb: ('r': red($color), 'g': green($color), 'b': blue($color));

  @each $name, $value in $rgb {
    $value: if(divide($value, 255) < .03928, divide(divide($value, 255), 12.92), nth($luminance, $value + 1));
    $rgb: map-merge($rgb, ($name: $value));
  }

  @return (map-get($rgb, "r") * .2126) + (map-get($rgb, "g") * .7152) + (map-get($rgb, "b") * .0722);
}

@function contrast-ratio($background, $foreground) {
  $l1: luminance($background);
  $l2: luminance(opaque($background, $foreground));

  @return if($l1 > $l2, divide($l1 + .05, $l2 + .05), divide($l2 + .05, $l1 + .05));
}

@function contrast-color($bg) {
  $max-ratio: 0;
  $max-ratio-color: null;
  $min-contrast-ratio: 4.5;

  @each $color in $color-dark, $color-white {
    $contrast-ratio: contrast-ratio($bg, $color);

    @if $contrast-ratio > $min-contrast-ratio {
      @return $color;
    } @else if $contrast-ratio > $max-ratio {
      $max-ratio: $contrast-ratio;
      $max-ratio-color: $color;
    }
  }

  @return $max-ratio-color;
}
